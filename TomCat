jdk下载地址:http://www.oracle.com/technetwork/java/javase/archive-139210.html  
tomcat下载地址:https://archive.apache.org/dist/tomcat/
cronolog下载地址:http://cronolog.org
apr下载地址:
apr-util下载地址:

#安装jdk
cd /usr/local/src/
tar zxf jdk-8u211-linux-x64.tar.gz 
mv jdk1.8.0_211/    /usr/local/java
#安装tomcat
tar zxf apache-tomcat-8.5.35.tar.gz
mv apache-tomcat-8.5.35  /usr/local/tomcat
#配置环境变量
vim /etc/profile
    export JAVA_HOME=/usr/local/java #指定Java路径
    export JRE_HOME=/usr/local/java/jre #Java运行环境
    export CLASSPATH=$JAVA_HOME/lib/tools.jar:$JAVA_HOME/lib/dt.jar #声明Java类
    export PATH=$JAVA_HOME/bin:$JRE_HOME/bin:$PATH
source   /etc/profile
/usr/local/tomcat/bin/startup.sh   
ss -antpl  | grep java
#配置tomcat多实例
cp -ra /usr/local/tomcat /usr/local/tomcat2
vim /tomcat2/conf/server.xml
    <Server port="8006" shutdown="SHUTDOWN">
    <Connector port="8081" protocol="HTTP/1.1"
               connectionTimeout="20000"
               redirectPort="8444" />
/usr/local/tomcat2/bin/startup.sh
ss -antpl  | grep java
#自定义目录
vim /usr/local/tomcat/conf/server.xml
    <Host name="localhost"  appBase="webapps"
              unpackWARs="true" autoDeploy="true">
    <Context path="/shop" docBase="/data/project" debug="0" reloadable="false" crossContext="true">
    </Context>
mkdir -p /data/project && touch /data/project/test.txt  && touch /data/project/test.html
#开启目录遍历
vim /usr/local/tomcat/conf/web.xml
    <servlet>
        <servlet-name>default</servlet-name>
        <servlet-class>org.apache.catalina.servlets.DefaultServlet</servlet-class>
        <init-param>
            <param-name>debug</param-name>
            <param-value>0</param-value>
        </init-param>
        <init-param>
            <param-name>listings</param-name>
            <param-value>true</param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
    </servlet>
/usr/local/tomcat/bin/shutdown.sh
/usr/local/tomcat/bin/startup.sh
#远程监控
vim /usr/local/tomcat/bin/catalina.sh
    CATALINA_OPTS=" $CATALINA_OPTS  -Dcom.sun.management.jmxremote  -Dcom.sun.management.jmxremote.port=8888 -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.authenticate=true  -Djava.rmi.server.hostname=192.168.10.10"
cd /usr/local/java/jre/lib/management
cp jmxremote.password.template   jmxremote.password
vim jmxremote.password
    zhangsan 12345678
vim jmxremote.access
    monitorRole   readonly
    zhangsan  readwrite \
              create javax.management.monitor.*,javax.management.timer.* \
              unregister
chmod   600  jmxremote.password  jmxremote.access
/usr/local/tomcat/bin/shutdown.sh
/usr/local/tomcat/bin/startup.sh
jconsole
#tomcat管理后台
vim /usr/local/tomcat/webapps/manager/META-INF/context.xml 
    allow="127\.\d+\.\d+\.\d+|::1|0:0:0:0:0:0:0:1|\d+\.\d+\.\d+\.\d+" />
vim /usr/local/tomcat/conf/tomcat-users.xml
    <role rolename="manager-gui" />
    <user username="tomcat" password="123456789" roles="manager-gui" />
/usr/local/tomcat/bin/shutdown.sh
/usr/local/tomcat/bin/startup.sh
#定义错误页面
vim /usr/local/tomcat/webapps/ROOT/cw.jsp
    error
vim /usr/local/tomcat/conf/web.xml
    <error-page>
    <error-code>404</error-code>
    <location>/cw.jsp</location>
    </error-page>
#域名管理
vim /usr/local/tomcat/conf/tomcat-users.xml
    <role rolename="admin-gui"/>
    <user username="admin" password="12345678" roles="admin-gui"/>
vim /usr/local/tomcat/webapps/host-manager/META-INF/context.xml
    allow="127\.\d+\.\d+\.\d+|::1|0:0:0:0:0:0:0:1|\d+\.\d+\.\d+\.\d+" />
#日志切割
vim /usr/local/tomcat/conf/server.xml
    <Valve className="org.apache.catalina.valves.AccessLogValve" directory="logs"
         prefix="localhost_access_log" suffix=".txt"
         pattern="%h %l %u %t %r %s %b %{Referer}i %{User-Agent}i %D" />
tar zxf cronolog
cd cronolog
./configure  && make && make install
which cronolog
vim /usr/local/tomcat/bin/catalina.sh
   #touch "$CATALINA_OUT
sed -i 's#>> "$CATALINA_OUT" 2>\&1 "&"#2>\&1 | /usr/local/sbin/cronolog "$CATALINA_BASE"/logs/catalina-bdqn-%Y-%m-%d.log" \&#g' /usr/local/tomcat/bin/catalina.sh #自定义日志名+日期
cd /usr/local/tomcat/logs

























机子内存如果是 4G：
 
CATALINA_OPTS="-Dfile.encoding=UTF-8 -server -Xms2048m -Xmx2048m -Xmn1024m -XX:PermSize=256m -XX:MaxPermSize=512m -XX:SurvivorRatio=10 -XX:MaxTenuringThreshold=15 -XX:NewRatio=2 -XX:+DisableExplicitGC"
 
机子内存如果是 8G：
 
CATALINA_OPTS="-Dfile.encoding=UTF-8 -server -Xms4096m -Xmx4096m -Xmn2048m -XX:PermSize=256m -XX:MaxPermSize=512m -XX:SurvivorRatio=10 -XX:MaxTenuringThreshold=15 -XX:NewRatio=2 -XX:+DisableExplicitGC"
 
机子内存如果是 16G：
 
CATALINA_OPTS="-Dfile.encoding=UTF-8 -server -Xms8192m -Xmx8192m -Xmn4096m -XX:PermSize=256m -XX:MaxPermSize=512m -XX:SurvivorRatio=10 -XX:MaxTenuringThreshold=15 -XX:NewRatio=2 -XX:+DisableExplicitGC"
 
机子内存如果是 32G：
 
CATALINA_OPTS="-Dfile.encoding=UTF-8 -server -Xms16384m -Xmx16384m -Xmn8192m -XX:PermSize=256m -XX:MaxPermSize=512m -XX:SurvivorRatio=10 -XX:MaxTenuringThreshold=15 -XX:NewRatio=2 -XX:+DisableExplicitGC"
 
如果是 8G 开发机
 
-Xms2048m -Xmx2048m -XX:NewSize=512m -XX:MaxNewSize=1024m -XX:PermSize=256m -XX:MaxPermSize=512m
 
如果是 16G 开发机
 
-Xms4096m -Xmx4096m -XX:NewSize=1024m -XX:MaxNewSize=2048m -XX:PermSize=256m -XX:MaxPermSize=512m

参数说明：

-Dfile.encoding：默认文件编码

-server：表示这是应用于服务器的配置，JVM 内部会有特殊处理的

-Xmx1024m：设置JVM最大可用内存为1024MB

-Xms1024m：设置JVM最小内存为1024m。此值可以设置与-Xmx相同，以避免每次垃圾回收完成后JVM重新分配内存。

-Xmn1024m：设置JVM新生代大小（JDK1.4之后版本）。一般-Xmn的大小是-Xms的1/2左右，不要设置的过大或过小，过大导致老年代变小，频繁Full GC，过小导致minor GC频繁。如果不设置-Xmn，可以采用-XX:NewRatio=2来设置，也是一样的效果

-XX:NewSize：设置新生代大小

-XX:MaxNewSize：设置最大的新生代大小

-XX:PermSize：设置永久代大小

-XX:MaxPermSize：设置最大永久代大小

-XX:NewRatio=4：设置年轻代（包括 Eden 和两个 Survivor 区）与终身代的比值（除去永久代）。设置为 4，则年轻代与终身代所占比值为 1：4，年轻代占整个堆栈的 1/5

-XX:MaxTenuringThreshold=10：设置垃圾最大年龄，默认为：15。

如果设置为0 的话，则年轻代对象不经过 Survivor 区，直接进入年老代。

对于年老代比较多的应用，可以提高效率。如果将此值设置为一个较大值，则年轻代对象会在 Survivor 区进行多次复制，这样可以增加对象再年轻代的存活时间，增加在年轻代即被回收的概论。

需要注意的是，设置了 -XX:MaxTenuringThreshold，并不代表着，对象一定在年轻代存活15次才被晋升进入老年代，它只是一个最大值，事实上，存在一个动态计算机制，计算每次晋入老年代的阈值，取阈值和MaxTenuringThreshold中较小的一个为准。

-XX:+DisableExplicitGC：这个将会忽略手动调用 GC 的代码使得 System.gc() 的调用就会变成一个空调用，完全不会触发任何 GC


    <Connector port="8080" protocol="org.apache.coyote.http11.Http11Nio2Protocol"
               connectionTimeout="20000"
               redirectPort="8443" />